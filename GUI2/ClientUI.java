/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package wbs_2103.GUI2;

import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import wbs_2103.ClientState;
import wbs_2103.MeterUsage;
import wbs_2103.Payment;
import wbs_2103.SharedData;
import wbs_2103.Client;
import static wbs_2103.SharedData.clientID;

/**
 *
 * @author Rica Mae
 */
public class ClientUI extends javax.swing.JFrame {
    String todayDate = LocalDate.now().toString();
    MeterUsage meterusage = new MeterUsage();
    Payment paymentProcessor = new Payment();
    Client client = new Client();
    
    String selectedVal;
    
    /**
     * Creates new form ClientUI
     */
    public ClientUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        clientTab = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        meterUsageLabel = new javax.swing.JLabel();
        refreshButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        payLabel = new javax.swing.JLabel();
        refreshBill = new javax.swing.JButton();
        paymentField = new javax.swing.JTextField();
        payButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        selectPM = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        transactionTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        refreshTransac = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        complaintArea = new javax.swing.JTextArea();
        submitButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        clientInfoLabel = new javax.swing.JLabel();
        changeUsername = new javax.swing.JTextField();
        changeContact = new javax.swing.JTextField();
        changeLoc = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        changePass = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        logoutButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));

        jLabel4.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("METER USAGE");

        meterUsageLabel.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        meterUsageLabel.setForeground(new java.awt.Color(0, 0, 0));
        meterUsageLabel.setText("DISPLAY METER USAGE");

        refreshButton.setText("REFRESH");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(meterUsageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshButton))
                .addGap(94, 94, 94)
                .addComponent(meterUsageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(141, Short.MAX_VALUE))
        );

        clientTab.addTab("VIEW METER USAGE", jPanel2);

        jPanel3.setBackground(new java.awt.Color(0, 204, 204));

        payLabel.setBackground(new java.awt.Color(153, 153, 153));
        payLabel.setForeground(new java.awt.Color(0, 0, 0));
        payLabel.setText("METER TO PAY (DISPLAY)");

        refreshBill.setText("REFRESH");
        refreshBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBillActionPerformed(evt);
            }
        });

        payButton.setText("PAY NOW");
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("PAY WATER BILL");

        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("PAYMENT");

        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("PAYMENT METHOD");

        selectPM.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        selectPM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gcash", "Paypal", "Paymaya" }));
        selectPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectPMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(payButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(selectPM, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(payLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel15)
                            .addGap(65, 65, 65)
                            .addComponent(paymentField, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(37, 37, 37)
                .addComponent(refreshBill)
                .addGap(58, 58, 58))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(refreshBill)
                        .addGap(125, 125, 125))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(payLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paymentField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(selectPM, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(payButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        clientTab.addTab("PAY BILL", jPanel3);

        jPanel6.setBackground(new java.awt.Color(0, 204, 204));

        transactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Payment ID", "Client ID", "Amount Paid", "Charges", "Total", "Meter Paid", "Date"
            }
        ));
        jScrollPane2.setViewportView(transactionTable);

        jLabel12.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("VIEW HISTORY");

        refreshTransac.setText("REFRESH");
        refreshTransac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTransacActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(refreshTransac, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshTransac, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        clientTab.addTab("VIEW TRANSACTION", jPanel6);

        jPanel7.setBackground(new java.awt.Color(0, 204, 204));

        complaintArea.setColumns(20);
        complaintArea.setRows(5);
        jScrollPane1.setViewportView(complaintArea);

        submitButton.setText("SUBMIT");

        jLabel13.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("SEND COMPLAINT TO ADMIN");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        clientTab.addTab("SEND COMPLAINT", jPanel7);

        jPanel4.setBackground(new java.awt.Color(0, 204, 204));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        clientInfoLabel.setBackground(new java.awt.Color(153, 153, 153));
        clientInfoLabel.setForeground(new java.awt.Color(51, 51, 51));
        clientInfoLabel.setText("CLIENT INFORMATION (DISPLAY)");
        jPanel4.add(clientInfoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 180, 242));
        jPanel4.add(changeUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, 208, -1));

        changeContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeContactActionPerformed(evt);
            }
        });
        jPanel4.add(changeContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, 208, -1));

        changeLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeLocActionPerformed(evt);
            }
        });
        jPanel4.add(changeLoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 280, 208, -1));
        jPanel4.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(313, 636, 208, -1));

        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Change Location");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 260, 132, -1));

        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Change Contact No.");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, 132, -1));

        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Change Username");
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, 132, -1));

        changePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePassActionPerformed(evt);
            }
        });
        jPanel4.add(changePass, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 220, 208, -1));

        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Change Password");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 200, 132, -1));

        updateButton.setText("UPDATE INFO");
        jPanel4.add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 330, 110, 40));

        jLabel14.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("VIEW AND UPDATE INFO");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        clientTab.addTab("UPDATE INFO", jPanel4);

        jPanel5.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("AQUABILL");

        logoutButton.setText("LOG OUT");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wbs_2103/GUI/icons/water-tap (2) (1).png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("CLIENT ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(logoutButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106)
                .addComponent(logoutButton)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clientTab))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(clientTab, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changeContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changeContactActionPerformed

    private void changeLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeLocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changeLocActionPerformed

    private void changePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changePassActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        refreshMeterReading();
        
        
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed
        // TODO add your handling code here:
         try {
        int clientID = SharedData.clientID;
        
        String selectedVal = (String) selectPM.getSelectedItem();
        if (selectedVal == null || selectedVal.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a payment method!");
            return;
        }

        // Calculate overdue charges
        LocalDate lastPaymentDate = meterusage.fetchLastPaymentDate(clientID);
        
        meterusage.updateReadings(clientID);

        // Fetch readings and calculate dues
        double currentReading = meterusage.fetchCurrentReading(clientID);
        double previousReading = meterusage.fetchPreviousReading(clientID);
        double cubicMeterUsage = currentReading - previousReading;
        //paymentProcessor.setPin(pinField.getText());
        String pin = paymentProcessor.getPin();
       
        

        double outstandingBalance = meterusage.getBalance();
        

        // Validate payment

        
        long overDueDays;
        double charges;


        double usage = currentReading - previousReading;
        
        if (usage == 0 || previousReading == 0){
            charges = 0;
            overDueDays = 0;
            
        }
        else{
            meterusage.calculateOverdueDays(lastPaymentDate);
            overDueDays = meterusage.getOverdueDays();
            charges = meterusage.calculateCharges(overDueDays); 
        }
        
                // Calculate usage and amounts

        double amountDue = meterusage.calculateAmount(cubicMeterUsage);
        double totalAmountToPay = amountDue + outstandingBalance + charges;
        
        double payment = Double.parseDouble(paymentField.getText());
        if (payment < totalAmountToPay) {
            JOptionPane.showMessageDialog(this, "Payment is insufficient!");
            return;
        }
        
        if(totalAmountToPay == 0){
            JOptionPane.showMessageDialog(this, "You have no balance to pay","Reminder", HEIGHT);
            return;
        }
        double change = payment - totalAmountToPay;
        
        paymentProcessor.setPaymentMethod(selectedVal);
        String payment_method = paymentProcessor.getPaymentMethod();
        if (!(totalAmountToPay <= 0)){
            paymentProcessor.recordPayment(clientID, payment, charges, totalAmountToPay, cubicMeterUsage, change, payment_method);
        
        // Display receipt
        JOptionPane.showMessageDialog(this, "Receipt:\n"
                + "Cubic Meter Usage: " + cubicMeterUsage + "\n"
                + "Amount Due: " + amountDue + "\n"
                + "Outstanding Balance: " + outstandingBalance + "\n"
                + "Charges: " + charges + "\n"
                + "Payment Method: " + payment_method + "\n"
                + "Total Paid: " + payment + "\n"
                + "Change: " + change);

        // Refresh bill details
        loadBillDetails();
        meterusage.updatePreviousReading(clientID);
        }
        else{
            JOptionPane.showMessageDialog(this, "No minimum payment due.");
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }

    }//GEN-LAST:event_payButtonActionPerformed

    private void refreshBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBillActionPerformed
        // TODO add your handling code here:
        loadBillDetails();
    }//GEN-LAST:event_refreshBillActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
        SharedData.clientID = 0;
        SharedData.meterID = null;
        ClientState.verifiedID = -1;
        ClientState.isVerified = false;

        ClientSignIn clientsn = new ClientSignIn();
            clientsn.setVisible(true);
            this.dispose();

    }//GEN-LAST:event_logoutButtonActionPerformed

    private void refreshTransacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTransacActionPerformed
        // TODO add your handling code here:
    try {
        int clientID = SharedData.clientID;
        if (clientID == 0) {
            JOptionPane.showMessageDialog(this, "Please log in to view your transaction history!");
            return;
        }
        ArrayList<String> paymentInfo = client.filterPaymentByClientID(clientID);

        // Clear the table first
        DefaultTableModel tableModel = (DefaultTableModel) transactionTable.getModel();
        tableModel.setRowCount(0);

        // Add the filtered data to the table
        for (String row : paymentInfo) {
            String[] rowInfo = row.split(", ");
            tableModel.addRow(rowInfo);
        }
    }
    catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_refreshTransacActionPerformed

    private void selectPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectPMActionPerformed
        // TODO add your handling code here:
        selectedVal = selectPM.getSelectedItem().toString();
    }//GEN-LAST:event_selectPMActionPerformed

    /**
     * @param args the command line arguments
     */
    private void loadBillDetails() {
    try {
        int clientID = SharedData.clientID;
        if (clientID == 0) {
            JOptionPane.showMessageDialog(this, "Please log in to view your billing details!");
            return;
        }

        meterusage.updateReadings(clientID);
        
        
        // Fetch meter reading details
        Map<String, Object> details = meterusage.getMeterReadingDetails(clientID);

        if (details.containsKey("error")) {
            payLabel.setText(details.get("error").toString());
            return;
        }

        boolean isActive = details.get("isActive") != null ? (boolean) details.get("isActive") : false;
        double currentReading = details.get("currentReading") != null ? (double) details.get("currentReading") : 0.0;
        double previousReading = details.get("previousReading") != null ? (double) details.get("previousReading") : 0.0;
        double outstandingBalance = details.get("outstandingBalance") != null ? (double) details.get("outstandingBalance") : 0.0;
        String todayDate = details.get("todayDate") != null ? details.get("todayDate").toString() : "";

        // Fetch last payment date and calculate overdue days
        LocalDate lastPaymentDate = meterusage.fetchLastPaymentDate(clientID);
        if (lastPaymentDate == null) {
            lastPaymentDate = LocalDate.now().minusDays(1); // Default if no payment date found
        }

        long overDueDays;
        double charges;


        double usage = currentReading - previousReading;
        
        if (usage == 0 || previousReading == 0){
            charges = 0;
            overDueDays = 0;
            
        }
        else{
            meterusage.calculateOverdueDays(lastPaymentDate);
            overDueDays = meterusage.getOverdueDays();
            charges = meterusage.calculateCharges(overDueDays); 
        }
        
                // Calculate usage and amounts

        double amountDue = meterusage.calculateAmount(usage);
        double totalAmountDue = amountDue + outstandingBalance + charges;
        
        
        
        

        // Display the billing details
        String displayText = String.format("<html>As of %s:<br>Status: %s<br>Current Reading: %.2f m³<br>Previous Reading: %.2f m³<br>"
                + "Cubic Meter Usage: %.2f m³<br>Outstanding Balance: ₱%.2f<br>Amount to Pay: ₱%.2f<br>"
                + "Overdue Days: %d day(s)<br>Charges: ₱%.2f<br>Total Due: ₱%.2f</html>",
                todayDate, (isActive ? "Active" : "Inactive"),
                currentReading, previousReading, usage, outstandingBalance, amountDue, 
                overDueDays, charges, totalAmountDue);

        payLabel.setText(displayText);

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error loading bill details: " + e.getMessage());
    }
    }




    
    private void refreshMeterReading() {
        try {
            int clientID = SharedData.clientID;
            if (clientID == 0) {
                JOptionPane.showMessageDialog(this, "Please log in to view your meter readings!");
                return;
            }
            
            meterusage.updateReadings(clientID);

            MeterUsage meterUsage = new MeterUsage();
            Map<String, Object> details = meterUsage.getMeterReadingDetails(clientID);

            if (details.containsKey("error")) {
                meterUsageLabel.setText(details.get("error").toString());
                return;
            }

            boolean isActive = (boolean) details.get("isActive");
            double currentReading = (double) details.get("currentReading");
            double previousReading = (double) details.get("previousReading");
            double outstandingBalance = (double) details.get("outstandingBalance");
            String todayDate = (String) details.get("todayDate");
            String lastReadingDate = (String) details.get("lastReadingDate");

            String statusMessage = isActive
                ? "Status: Active"
                : "Status: Inactive - you can still pay your balance";

            String displayText = "<html>"
                + "Today's Date: " + todayDate + "<br>"
                + statusMessage + "<br>"
                + "Current Reading: " + currentReading + " m³<br>"
                + "Last Reading Date: " + lastReadingDate + "<br>"
                + "Previous Reading: " + previousReading + " m³<br>"
                //+ "Outstanding Balance: ₱" + outstandingBalance
                + "</html>";

            meterUsageLabel.setText(displayText);


        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error refreshing meter reading: " + e.getMessage());
        }
    }
    
    




    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField changeContact;
    private javax.swing.JTextField changeLoc;
    private javax.swing.JTextField changePass;
    private javax.swing.JTextField changeUsername;
    private javax.swing.JLabel clientInfoLabel;
    private javax.swing.JTabbedPane clientTab;
    private javax.swing.JTextArea complaintArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JButton logoutButton;
    private javax.swing.JLabel meterUsageLabel;
    private javax.swing.JButton payButton;
    private javax.swing.JLabel payLabel;
    private javax.swing.JTextField paymentField;
    private javax.swing.JButton refreshBill;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton refreshTransac;
    private javax.swing.JComboBox<String> selectPM;
    private javax.swing.JButton submitButton;
    private javax.swing.JTable transactionTable;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
